
#OIV library
cmake_minimum_required(VERSION 3.8)

execute_process(COMMAND gitHead.cmd WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE GIT_HASH_ID)
#execute_process(COMMAND gitCommitDate.cmd WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE  GIT_COMMIT_DATE)
#execute_process(COMMAND gitBranch.cmd WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE GIT_BRANCH)
string(REPLACE \n "" GIT_HASH_ID ${GIT_HASH_ID})
#string(REPLACE \n "" GIT_COMMIT_DATE ${GIT_COMMIT_DATE})
#string(REPLACE \n "" GIT_BRANCH ${GIT_BRANCH})

add_definitions(-DOIV_VERSION_REVISION="${GIT_HASH_ID}")
#add_definitions(-DGIT_COMMIT_DATE="${GIT_COMMIT_DATE}")
#add_definitions(-DGIT_BRANCH="${GIT_BRANCH}")

#TODO: change source files to be under Source folder
file(GLOB_RECURSE sourceFiles
    "./*.h"
    "./*.cpp"
)

set(ExternalFolder ../../External)
set(TargetName OIViewer)
add_executable (${TargetName} ${sourceFiles} )




#Build resources for embedding an Icon into the executable 
add_custom_command(TARGET ${TargetName} 
                   PRE_LINK
                   COMMAND rc
                   /r
                   /d OIV_BUILD_TYPE=${OIV_BUILD_TYPE}
                   /d OIV_OFFICIAL_BUILD=${OIV_OFFICIAL_BUILD}
                   /fo "${CMAKE_BINARY_DIR}/${CMAKE_INTDIR}/Resource.res"
                   "\"${CMAKE_CURRENT_SOURCE_DIR}/Resource.rc\""
                   WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
                   COMMENT "Compiling resources"
                   
                   )

target_include_directories(${TargetName} PRIVATE ${ExternalFolder}/ExoticNumbers/include)
target_include_directories(${TargetName} PRIVATE ${ExternalFolder}/LLUtils/Include)
target_include_directories(${TargetName} PRIVATE ${ExternalFolder}/ImageCodec/Image/include)
target_include_directories(${TargetName} PRIVATE ../../oivlib/oiv/include)
target_link_options(${TargetName} PRIVATE "/SUBSYSTEM:WINDOWS")
target_link_libraries(${TargetName}

#local libraries
oiv
#system libraries
dbghelp.lib
kernel32.lib
user32.lib
gdi32.lib
shell32.lib
Advapi32.lib
ole32.lib
MSIMG32.lib
Comdlg32.lib
shcore.lib
)

set_target_properties(${TargetName} PROPERTIES LINK_FLAGS 
"/DELAYLOAD:\"advapi32.dll\" /DELAYLOAD:\"SHELL32.dll\" /DELAYLOAD:\"MSIMG32.dll\" /DELAYLOAD:\"dbghelp.dll\" /DELAYLOAD:\"COMDLG32.dll\" /DELAYLOAD:\"Shcore.dll\" /DELAYLOAD:\"API-MS-WIN-SHCORE-SCALING-L1-1-1.DLL\"")

include_directories(../oiv)


#Link resources file to the executable
target_link_options(${TargetName} PRIVATE ${CMAKE_BINARY_DIR}/${CMAKE_INTDIR}/resource.res)


#Copy own resources to the output dir 
add_custom_command( TARGET ${TargetName}
                   PRE_LINK
                   COMMAND xcopy
                   /Y 
                   /D 
                   /S 
                   /I
                   "\"${CMAKE_CURRENT_SOURCE_DIR}/Resources\""
                   "\"${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/Resources\""

                   WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
                   COMMENT "Copying resources to output dir..."
                   
                   )
                   
#Copy oiv library resources to the output dir 
     add_custom_command(TARGET ${TargetName}
                   POST_BUILD
                   COMMAND xcopy
                   /Y 
                   /D 
                   /S 
                   /I
                   "\"${CMAKE_CURRENT_SOURCE_DIR}/../../oivlib/oiv/Resources\""
                   "\"${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/Resources\""

                   WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
                   COMMENT "Copying resources to output dir..."
                   
                   )

#Embedd manifest 
     add_custom_command(TARGET ${TargetName}
                   POST_BUILD
                   COMMAND mt
                   -nologo 
                   -manifest
                   "\"${CMAKE_CURRENT_SOURCE_DIR}/OIViewerManifest.xml\""
                   -outputresource:"\"${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/${TargetName}.exe\""
                   WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
                   COMMENT "Embedding manifest file"
                   )
